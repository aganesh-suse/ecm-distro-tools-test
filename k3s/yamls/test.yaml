apiVersion: v1
kind: Namespace
metadata:
  name: more-clusterip
  labels:
    pod-security.kubernetes.io/enforce: privileged
    pod-security.kubernetes.io/audit: privileged
    pod-security.kubernetes.io/warn: privileged
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-clusterip
  namespace: more-clusterip
spec:
  selector:
    matchLabels:
      k8s-app: nginx-app-clusterip
  replicas: 2
  template:
    metadata:
      labels:
        k8s-app: nginx-app-clusterip
    spec:
      containers:
      - name: nginx
        image: ranchertest/mytestcontainer:unprivileged
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  labels:
    k8s-app: nginx-app-clusterip
  name: nginx-clusterip-svc
  namespace: more-clusterip
spec:
  type: ClusterIP
  ports:
    - port: 8080
  selector:
    k8s-app: nginx-app-clusterip
---
apiVersion: v1
kind: Namespace
metadata:
  name: more-daemonset
  labels:
    pod-security.kubernetes.io/enforce: privileged
    pod-security.kubernetes.io/audit: privileged
    pod-security.kubernetes.io/warn: privileged
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: test-daemonset
  namespace: more-daemonset
spec:
  selector:
    matchLabels:
      k8s-app: test-daemonset
  template:
    metadata:
      labels:
        k8s-app: test-daemonset
    spec:
      containers:
        - name: webserver
          image: ranchertest/mytestcontainer:unprivileged
          ports:
          - containerPort: 8080
---
apiVersion: v1
kind: Namespace
metadata:
  name: more-dns
  labels:
    pod-security.kubernetes.io/enforce: privileged
    pod-security.kubernetes.io/audit: privileged
    pod-security.kubernetes.io/warn: privileged
---
apiVersion: v1
kind: Pod
metadata:
  name: dnsutils
  namespace: more-dns
spec:
  containers:
  - name: dnsutils
    image: gcr.io/kubernetes-e2e-test-images/dnsutils:1.3
    command:
      - sleep
      - "3600"
    imagePullPolicy: IfNotPresent
  restartPolicy: Always
---
apiVersion: v1
kind: Namespace
metadata:
  name: more-ingress
  labels:
    pod-security.kubernetes.io/enforce: privileged
    pod-security.kubernetes.io/audit: privileged
    pod-security.kubernetes.io/warn: privileged
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: test-ingress
  namespace: more-ingress
  labels:
    k8s-app: nginx-app-ingress
spec:
  rules:
  - host: foo1.bar.com
    http:
      paths:
      - backend:
          service:
            name: nginx-ingress-svc
            port:
              number: 8080
        path: /
        pathType: ImplementationSpecific
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-all-ingress
  namespace: more-ingress
spec:
  podSelector: {}
  ingress:
  - {}
  policyTypes:
  - Ingress
---
apiVersion: v1
kind: Service
metadata:
 name: nginx-ingress-svc
 namespace: more-ingress
 labels:
   k8s-app: nginx-app-ingress
spec:
 ports:
 - port: 8080
   targetPort: 8080
   protocol: TCP
   name: http
 selector:
   k8s-app: nginx-app-ingress
---
apiVersion: v1
kind: ReplicationController
metadata:
 name: test-ingress
 namespace: more-ingress
spec:
 replicas: 2
 selector:
   k8s-app: nginx-app-ingress
 template:
   metadata:
     labels:
       k8s-app: nginx-app-ingress
   spec:
     terminationGracePeriodSeconds: 60
     containers:
     - name: testcontainer
       image: ranchertest/mytestcontainer:unprivileged
       ports:
       - containerPort: 8080
---
apiVersion: v1
kind: Namespace
metadata:
  name: more-nodeport
  labels:
    pod-security.kubernetes.io/enforce: privileged
    pod-security.kubernetes.io/audit: privileged
    pod-security.kubernetes.io/warn: privileged
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-nodeport
  namespace: more-nodeport
spec:
  selector:
    matchLabels:
      k8s-app: nginx-app-nodeport
  replicas: 2
  template:
    metadata:
      labels:
        k8s-app: nginx-app-nodeport
    spec:
      containers:
      - name: nginx
        image: ranchertest/mytestcontainer:unprivileged
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  labels:
    k8s-app: nginx-app-nodeport
  name: nginx-nodeport-svc
  namespace: more-nodeport
spec:
  type: NodePort
  ports:
    - port: 8080
      nodePort: 30096
      name: http
  selector:
    k8s-app: nginx-app-nodeport